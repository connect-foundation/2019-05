language: node_js

node_js:
  - 12.13

cache:
  - npm
  - yarn

git:
  depth: false

services:
  - docker

branches:
  only:
    - master

jobs:
  include:
    #PULL_REQUEST CHECKING STAGE
    - stage: 'TEST'
      name: 'FRONT TEST'
      if: type = pull_request
      before_install:
        - cd client
        - GIT_DIFF_RESULT=$(eval $(echo bash ../diff_checking.sh $TRAVIS_COMMIT_RANGE))
        - IS_CHANGED_FRONT=$(echo $GIT_DIFF_RESULT | cut -d ',' -f1)
        - |
          if [ $IS_CHANGED_FRONT != true ]; then
            echo 'Front directory not change'
            travis_terminate 0
          fi
      install:
        - yarn install
      before_script:
        - openssl aes-256-cbc -K $encrypted_a1542a79f8e3_key -iv $encrypted_a1542a79f8e3_iv -in env.tar.enc -out ./env.tar -d
        - tar xvf env.tar
      script:
        - yarn test

    - name: 'BACK TEST'
      if: type = pull_request
      before_install:
        - cd server
        - GIT_DIFF_RESULT=$(eval $(echo bash ../diff_checking.sh $TRAVIS_COMMIT_RANGE))
        - IS_CHANGED_BACK=$(echo $GIT_DIFF_RESULT | cut -d ',' -f2)
        - |
          if [ $IS_CHANGED_BACK != true ]; then
            echo 'Back directory not change'
            travis_terminate 0
          fi
      install:
        - yarn install
      before_script:
        - openssl aes-256-cbc -K $encrypted_09a4eca9209d_key -iv $encrypted_09a4eca9209d_iv -in env.tar.enc -out ./env.tar -d
        - tar xvf env.tar
      script:
        - yarn test

    #PRODUCT SERVER BUILD STAGE
    - stage: 'PROD BUILD'
      name: 'PROD SERVER FRONT BUILD'
      if: type = push
      before_install:
        - cd client
        - GIT_DIFF_RESULT=$(eval $(echo bash ../diff_checking.sh $TRAVIS_COMMIT_RANGE))
        - IS_CHANGED_FRONT=$(echo $GIT_DIFF_RESULT | cut -d ',' -f1)
        - |
          if [ $IS_CHANGED_FRONT != true ]; then
            echo 'Front directory not change'
            travis_terminate 0
          fi
      install:
        - yarn install
        - sudo apt-get install sshpass
      before_script:
        - openssl aes-256-cbc -K $encrypted_a1542a79f8e3_key -iv $encrypted_a1542a79f8e3_iv -in env.tar.enc -out ./env.tar -d
        - tar xvf env.tar
      script:
        - yarn build
      after_script:
        - sshpass -p "$PROD_SERVER_PASSWORD" scp -r -o StrictHostKeyChecking=no ./build root@"$PROD_SERVER_IP":/home/quickkick

    - name: 'PROD SERVER BACK BUILD'
      if: type = push
      before_install:
        - cd server
        - GIT_DIFF_RESULT=$(eval $(echo bash ../diff_checking.sh $TRAVIS_COMMIT_RANGE))
        - IS_CHANGED_BACK=$(echo $GIT_DIFF_RESULT | cut -d ',' -f2)
        - |
          if [ $IS_CHANGED_BACK != true ]; then
            echo 'Back directory not change'
            travis_terminate 0
          fi
      install:
        - yarn install
        - sudo apt-get install sshpass
      before_script:
        - openssl aes-256-cbc -K $encrypted_09a4eca9209d_key -iv $encrypted_09a4eca9209d_iv -in env.tar.enc -out ./env.tar -d
        - tar xvf env.tar
        - docker build -t $DOCKER_USERNAME/quickkick-api:latest .
      script:
        - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      after_script:
        - docker push $DOCKER_USERNAME/quickkick-api:latest
        - sshpass -p $PROD_SERVER_PASSWORD ssh -o StrictHostKeyChecking=no root@$PROD_SERVER_IP "/home/quickkick/api/prod.api.build.sh"
